============
eBill Paynet
============

.. 
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   !! This file is generated by oca-gen-addon-readme !!
   !! changes will be overwritten.                   !!
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   !! source digest: sha256:d41b999ec4bad7bb54bfbc8d58b00f61f9d31e68775e9d22c930bc6d42cc37fe
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

.. |badge1| image:: https://img.shields.io/badge/maturity-Beta-yellow.png
    :target: https://odoo-community.org/page/development-status
    :alt: Beta
.. |badge2| image:: https://img.shields.io/badge/licence-AGPL--3-blue.png
    :target: http://www.gnu.org/licenses/agpl-3.0-standalone.html
    :alt: License: AGPL-3
.. |badge3| image:: https://img.shields.io/badge/github-OCA%2Fl10n--switzerland-lightgray.png?logo=github
    :target: https://github.com/OCA/l10n-switzerland/tree/14.0/ebill_paynet
    :alt: OCA/l10n-switzerland
.. |badge4| image:: https://img.shields.io/badge/weblate-Translate%20me-F47D42.png
    :target: https://translation.odoo-community.org/projects/l10n-switzerland-14-0/l10n-switzerland-14-0-ebill_paynet
    :alt: Translate me on Weblate
.. |badge5| image:: https://img.shields.io/badge/runboat-Try%20me-875A7B.png
    :target: https://runboat.odoo-community.org/builds?repo=OCA/l10n-switzerland&target_branch=14.0
    :alt: Try me on Runboat

|badge1| |badge2| |badge3| |badge4| |badge5|

This module implements the exchange of electronic invoices with the SIXT Paynet infrastructure used in Switzerland.

It allows the automatic sending of invoice to customer that have registered with the service.

**Table of contents**

.. contents::
   :local:

Installation
============

This module depends on `base_ebill_payment_contract` which is located on `OCA/account_invoicing`, so this repository must also be present on the system.
This `base_ebill_payment_contract` module depends on `account_invoice_transmit_method` which will also be installed.

Configuration
=============

Create a service
================

To create a service you need to be registred with SIXT Paynet service. Then the configuration of the service can be done in `Accounting - Configuration - Payments - Paynet Service`

Configure the customers
=======================

A customer that wants to receive his invoices through Paynet will also need to register with the service.
In Odoo to enable the sending of invoices for a specific customer through Paynet, the transmit method must be set accordingly for that customer. This is done on the customer form in the tab `Sales & Purchases` section `Sales`.

Configure the contracts
=======================

The contracts specific to e-billing are located in `Accounting - Customers - eBill Payment Contract`
Although the Paynet system allows for automatic exchange of contract registration and status changes, this automation is not yet implemented.
To be active a contract needs to be in the state `Open` and it's start/end dates to be valid.

Usage
=====

To use this module, you need to:

#. Configure the service, customers and contracts as described in the CONFIGURATION section.
#. Create an invoice for a customer with an open Paynet contract.
#. Validate the invoice, and it will be send to the service.

Known issues / Roadmap
======================

To Do
=====

* The B2C invoice generated is only a draft and not tested, yet.
* Invoice in currency other than CHF will not be generated correctly.
* Implementation of the automatic registration of contracts, is not implemented and probably not supported by the DWS

Improvements
============

* On the contract view the list of messages for that contract could be visible.
* When an error is returned by the service it should be clearer where it is located in the payload send.
* In the chatter add a link to the job when it fails

Refactoring
===========

The dependence on `delivery` module could be extracted in a glue module.
For v14 or v15 consider refactoring on top of EDI framework

Bug Tracker
===========

Bugs are tracked on `GitHub Issues <https://github.com/OCA/l10n-switzerland/issues>`_.
In case of trouble, please check there if your issue has already been reported.
If you spotted it first, help us to smash it by providing a detailed and welcomed
`feedback <https://github.com/OCA/l10n-switzerland/issues/new?body=module:%20ebill_paynet%0Aversion:%2014.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.

Do not contact contributors directly about support or help with technical issues.

Credits
=======

Authors
~~~~~~~

* Camptocamp SA

Contributors
~~~~~~~~~~~~

* Thierry Ducrest <thierry.ducrest@camptocamp.com>
* `Trobz <https://trobz.com>`_:
  * Dung Tran <dungtd@trobz.com>

Other credits
~~~~~~~~~~~~~

The migration of this module from 13.0 to 14.0 as financially supported by Camptocamp

Maintainers
~~~~~~~~~~~

This module is maintained by the OCA.

.. image:: https://odoo-community.org/logo.png
   :alt: Odoo Community Association
   :target: https://odoo-community.org

OCA, or the Odoo Community Association, is a nonprofit organization whose
mission is to support the collaborative development of Odoo features and
promote its widespread use.

.. |maintainer-TDu| image:: https://github.com/TDu.png?size=40px
    :target: https://github.com/TDu
    :alt: TDu

Current `maintainer <https://odoo-community.org/page/maintainer-role>`__:

|maintainer-TDu| 

This module is part of the `OCA/l10n-switzerland <https://github.com/OCA/l10n-switzerland/tree/14.0/ebill_paynet>`_ project on GitHub.

You are welcome to contribute. To learn how please visit https://odoo-community.org/page/Contribute.
